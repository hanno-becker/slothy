// based on code by: Markus Krausz (18.03.18)
// date 23.07.21: Now licensed under CC0 with permission of the authors.

.syntax unified
// 3
.macro montgomery_mul_32 a, b, Qprime, Q, tmp, tmp2
    smull \tmp, \a, \a, \b
    mul \tmp2, \tmp, \Qprime
    smlal \tmp, \a, \tmp2, \Q
.endm

// 2
.macro addSub1 c0, c1
    add.w \c0, \c0, \c1
    sub.w \c1, \c0, \c1, lsl #1
.endm

// 3
.macro addSub2 c0, c1, c2, c3
    add \c0, \c0, \c1
    add \c2, \c2, \c3
    sub.w \c1, \c0, \c1, lsl #1
    sub.w \c3, \c2, \c3, lsl #1
.endm

// 6
.macro addSub4 c0, c1, c2, c3, c4, c5, c6, c7
    add \c0, \c0, \c1
    add \c2, \c2, \c3
    add \c4, \c4, \c5
    add \c6, \c6, \c7
    sub.w \c1, \c0, \c1, lsl #1
    sub.w \c3, \c2, \c3, lsl #1
    sub.w \c5, \c4, \c5, lsl #1
    sub.w \c7, \c6, \c7, lsl #1
.endm

.macro _2_layer_CT_32 c0, c1, c2, c3, zeta0, zeta1, zeta2, Qprime, Q, tmp, tmp2
    montgomery_mul_32 \c2, \zeta0, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta0, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3

    montgomery_mul_32 \c1, \zeta1, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta2, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c1, \c2, \c3
.endm

.macro _2_layer_inv_CT_32 c0, c1, c2, c3, zeta0, zeta1, zeta2, Qprime, Q, tmp, tmp2
    montgomery_mul_32 \c1, \zeta0, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta0, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c1, \c2, \c3

    montgomery_mul_32 \c2, \zeta1, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \zeta2, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3
.endm

.macro _3_layer_CT_32 c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    vmov \twiddle, \xi0
    montgomery_mul_32 \c4, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7

    vmov \twiddle, \xi1
    montgomery_mul_32 \c2, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c2, \c1, \c3, \c4, \c6, \c5, \c7

    vmov \twiddle, \xi3
    montgomery_mul_32 \c1, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi4
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi5
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi6
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c1, \c2, \c3, \c4, \c5, \c6, \c7
.endm

.macro _3_layer_inv_CT_32 c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    vmov \twiddle, \xi0
    montgomery_mul_32 \c1, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c1, \c2, \c3, \c4, \c5, \c6, \c7

    vmov \twiddle, \xi1
    montgomery_mul_32 \c2, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c2, \c1, \c3, \c4, \c6, \c5, \c7

    vmov \twiddle, \xi3
    montgomery_mul_32 \c4, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi4
    montgomery_mul_32 \c5, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi5
    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2
    vmov \twiddle, \xi6
    montgomery_mul_32 \c7, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7
.endm

/************************************************************
* Name:         _3_layer_inv_butterfly_light_fast_first
*
* Description:  upper half of 3-layer inverse butterfly
*               defined over X^8 - 1
*
* Input:        (c4, c1, c6, c3) = coefficients on the upper half;
*               (xi0, xi1, xi2, xi3, xi4, xi5, xi6) =
*               (  1,  1,  w_4,   1, w_8, w_4, w_8^3) in
*               Montgomery domain
*
* Symbols:      R = 2^32
*
* Constants:    Qprime = -MOD^{-1} mod^{+-} R, Q = MOD
*
* Output:
*               c4 =  c4 + c1        + (c6 + c3)
*               c5 = (c4 - c1) w_4   + (c6 + c3) w_8^3
*               c6 =  c4 + c1        - (c6 + c3)
*               c7 = (c4 - c1) w_8^3 + (c6 + c3) w_4
************************************************************/
// 15
.macro _3_layer_inv_butterfly_light_fast_first c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    addSub2 \c4, \c1, \c6, \c3
    addSub1 \c4, \c6

    vmov \tmp, \xi4
    vmov \tmp2, \xi6

    smull \c0, \c5, \c1, \tmp
    smlal \c0, \c5, \c3, \tmp2
    mul \twiddle, \c0, \Qprime
    smlal \c0, \c5, \twiddle, \Q

    smull \c2, \c7, \c1, \tmp2
    smlal \c2, \c7, \c3, \tmp
    mul \twiddle, \c2, \Qprime
    smlal \c2, \c7, \twiddle, \Q
.endm

/************************************************************
* Name:         _3_layer_inv_butterfly_light_fast_second
*
* Description:  lower half of 3-layer inverse butterfly
*               defined over X^8 - 1, and the 2nd
*               layer of butterflies
*
* Input:
*               (c4, c5, c6, c7) = results of the upper half;
*               (c0, c1, c2, c3) = coefficients on the lower half;
*               (xi0, xi1, xi2, xi3, xi4, xi5, xi6) =
*               (  1,  1,  w_4,   1, w_8, w_4, w_8^3) in
*               Montgomery domain
*
* Symbols:      R = 2^32
*
* Constants:    Qprime = -MOD^{-1} mod^{+-} R, Q = MOD
*
* Output:       (normal order)
*               c0 =   c0 + c1     + (c2 + c3)         + (  c4 + c5     + (c6 + c7)       )
*               c1 =  (c0 - c1) w3 + (c2 - c3)  w4     + ( (c4 - c5) w5 + (c6 - c7) w6    )
*               c2 = ( c0 + c1     - (c2 + c3)) w1     + (( c4 + c5     - (c6 + c7)   ) w2)
*               c3 = ((c0 - c1) w3 - (c2 - c3)  w4) w1 + (((c4 - c5) w5 - (c6 - c7) w6) w2)
*               c4 =   c0 + c1     - (c2 + c3)         - (  c4 + c5     + (c6 + c7)       ) w0
*               c5 =  (c0 - c1) w3 + (c2 - c3)  w4     - ( (c4 - c5) w5 + (c6 - c7) w6    ) w0
*               c6 = ( c0 + c1     - (c2 + c3)) w1     - (( c4 + c5     - (c6 + c7)   ) w2) w0
*               c7 = ((c0 - c1) w3 - (c2 - c3)  w4) w1 - (((c4 - c5) w5 - (c6 - c7) w6) w2) w0
************************************************************/
// 19
.macro _3_layer_inv_butterfly_light_fast_second c0, c1, c2, c3, c4, c5, c6, c7, xi0, xi1, xi2, xi3, xi4, xi5, xi6, twiddle, Qprime, Q, tmp, tmp2
    addSub2 \c0, \c1, \c2, \c3

    vmov \twiddle, \xi2
    montgomery_mul_32 \c3, \twiddle, \Qprime, \Q, \tmp, \tmp2
    addSub2 \c0, \c2, \c1, \c3

    montgomery_mul_32 \c6, \twiddle, \Qprime, \Q, \tmp, \tmp2

    addSub4 \c0, \c4, \c1, \c5, \c2, \c6, \c3, \c7
.endm

// This code uses UMULL - which is constant time on the M4, but not on the M3
// Make sure that this code is never used on an M3
smlad r0,r0,r0,r0

// ##############################
// ##########   NTT    ##########
// ##############################

// void pqcrystals_dilithium_ntt(int32_t p[N]);
.global pqcrystals_dilithium_ntt_opt_m7
#ifndef __CLANG__
.type pqcrystals_dilithium_ntt_opt_m7,%function
#endif
.align 2
pqcrystals_dilithium_ntt_opt_m7:
  // bind aliases
  ptr_p     .req R0
  ptr_zeta  .req R1
  zeta      .req R1
  qinv      .req R2
  q         .req R3
  cntr      .req R4
  pol4      .req R4
  pol0      .req R5
  pol1      .req R6
  pol2      .req R7
  pol3      .req R8
  temp_h    .req R9
  temp_l    .req R10
  zeta0     .req R11
  zeta1     .req R12
  zeta2     .req R14
  pol5     .req R11
  pol6     .req R12
  pol7     .req R14

  // preserve registers
  push {R4-R11, R14}

  // load constants, ptr
  ldr.w qinv, inv_ntt_asm_smull_qinv  // -qinv_signed
  ldr.w q, inv_ntt_asm_smull_q

  // stage 1 - 3
  .equ distance, 512
  .equ strincr, 4

  ldr.w ptr_zeta, =zetas_new332
  vldm ptr_zeta!, {s2-s8}
  vmov s0, ptr_zeta

  add.w temp_l, ptr_p, #32*strincr // 32 iterations
  vmov s9, temp_l
                                       // Instructions:    19
                                       // Expected cycles: 12
                                       // Expected IPC:    1.58
                                       //
                                       // Cycle bound:     12.0
                                       // IPC bound:       1.58
                                       //
                                       // Wall time:     0.04s
                                       // User time:     0.04s
                                       //
                                       // ----- cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|----
        ldr.w r12, [r0, #896]          // *.............................
        vmov r11, s2                   // *.............................
        ldr.w r6, [r0, #640]           // .*............................
        vmov r4, s3                    // .*............................
        ldr.w r5, [r0, #768]           // ..*...........................
        smull r12, r7, r12, r11        // ..*...........................
        ldr.w r8, [r0, #384]           // ...*..........................
        smull r14, r6, r6, r11         // ...*..........................
        ldr.w r10, [r0, #256]          // ....*.........................
        mul r1, r12, r2                // ....*.........................
        smull r5, r9, r5, r11          // .....*........................
        smlal r12, r7, r1, r3          // ......*.......................
        mul r12, r5, r2                // .......*......................
        add r1, r8, r7                 // ........*.....................
        mul r8, r14, r2                // ........*.....................
        smlal r5, r9, r12, r3          // .........*....................
        smlal r14, r6, r8, r3          // ..........*...................
        add r8, r10, r9                // ...........*..................
        smull r14, r12, r1, r4         // ...........*..................

                                       // ------ cycle (expected) ------>
                                       // 0                        25
                                       // |------------------------|-----
        // ldr.w r7, [r0, #896]        // *..............................
        // vmov r11, s2                // *..............................
        // smull r4, r7, r7, r11       // ..*............................
        // ldr.w r9, [r0, #640]        // .*.............................
        // ldr.w r8, [r0, #768]        // ..*............................
        // smull r12, r6, r9, r11      // ...*...........................
        // mul r14, r4, r2             // ....*..........................
        // ldr.w r10, [r0, #384]       // ...*...........................
        // smull r8, r9, r8, r11       // .....*.........................
        // smlal r4, r7, r14, r3       // ......*........................
        // mul r4, r8, r2              // .......*.......................
        // add r1, r10, r7             // ........*......................
        // mul r14, r12, r2            // ........*......................
        // ldr.w r10, [r0, #256]       // ....*..........................
        // smlal r8, r9, r4, r3        // .........*.....................
        // vmov r4, s3                 // .*.............................
        // smlal r12, r6, r14, r3      // ..........*....................
        // add r8, r10, r9             // ...........*...................
        // smull r14, r12, r1, r4      // ...........*...................

        push {r1}
        vmov r1, s9
        sub r1, r1, #4
        vmov s9, r1
        pop {r1}
layer123_loop:
                                          // Instructions:    86
                                          // Expected cycles: 44
                                          // Expected IPC:    1.95
                                          //
                                          // Cycle bound:     44.0
                                          // IPC bound:       1.95
                                          //
                                          // Wall time:     1524.89s
                                          // User time:     1524.89s
                                          //
                                          // ------------ cycle (expected) ------------->
                                          // 0                        25
                                          // |------------------------|------------------
        sub.w r10, r8, r9, lsl #1         // *...........................................
        mul r9, r14, r2                   // *...........................................
        sub.w r5, r1, r7, lsl #1          // .*..........................................
        smull r7, r4, r8, r4              // .*..........................................
        vmov r1, s4                       // ..*.........................................
        smlal r14, r12, r9, r3            // ..*.........................................
        ldr.w r9, [r0, #128]              // ...*........................................
        mul r14, r7, r2                   // ...*........................................
        smull r8, r5, r5, r1              // ....*.......................................
        smlal r7, r4, r14, r3             // .....*......................................
        add r14, r9, r6                   // ......*.....................................
        mul r7, r8, r2                    // ......*.....................................
        sub.w r6, r14, r6, lsl #1         // .......*....................................
        smull r1, r10, r10, r1            // .......*....................................
        ldr.w r9, [r0, #512]              // ........*...................................
        smlal r8, r5, r7, r3              // ........*...................................
        add r7, r14, r12                  // .........*..................................
        mul r8, r1, r2                    // .........*..................................
        sub.w r14, r7, r12, lsl #1        // ..........*.................................
        smull r9, r12, r9, r11            // ..........*.................................
        add r11, r6, r5                   // ...........*................................
        smlal r1, r10, r8, r3             // ...........*................................
        vmov r1, s6                       // ............*...............................
        mul r6, r9, r2                    // ............*...............................
        sub.w r5, r11, r5, lsl #1         // .............*..............................
        smull r14, r1, r14, r1            // .............*..............................
        ldr.w r8, [r0]                    // ..............*.............................
        smlal r9, r12, r6, r3             // ..............*.............................
        vmov r6, s5                       // ...............*............................
        mul r9, r14, r2                   // ...............*............................
        add r8, r8, r12                   // ................*...........................
        smull r6, r7, r7, r6              // ................*...........................
        sub.w r12, r8, r12, lsl #1        // .................*..........................
        smlal r14, r1, r9, r3             // .................*..........................
        vmov r14, s8                      // ..................*.........................
        mul r9, r6, r2                    // ..................*.........................
        add r8, r8, r4                    // ...................*........................
        smull r5, r14, r5, r14            // ...................*........................
        add r12, r12, r10                 // ....................*.......................
        smlal r6, r7, r9, r3              // ....................*.......................
        sub.w r6, r8, r4, lsl #1          // .....................*......................
        mul r9, r5, r2                    // .....................*......................
        add r6, r6, r1                    // ......................*.....................
        str.w r6, [r0, #256]              // ......................*.....................
        add r4, r8, r7                    // .......................*....................
        smlal r5, r14, r9, r3             // .......................*....................
        sub.w r8, r4, r7, lsl #1          // ........................*...................
        str.w r8, [r0, #128]              // ........................*...................
        str r4, [r0], #4                  // .........................*.................. // @slothy:core // @slothy:before=cmp
        vmov r9, s7                       // .........................*..................
        sub.w r8, r12, r10, lsl #1        // ..........................*.................
        smull r4, r5, r11, r9             // ..........................*.................
        add r9, r8, r14                   // ...........................*................
        str.w r9, [r0, #764]              // ...........................*................
        sub.w r8, r6, r1, lsl #1          // ............................*...............
        mul r10, r4, r2                   // ............................*...............
        str.w r8, [r0, #380]              // .............................*..............
        ldr.w r7, [r0, #896]              // .............................e..............
        vmov r11, s2                      // ..............................e.............
        smlal r4, r5, r10, r3             // ..............................*.............
        sub.w r9, r9, r14, lsl #1         // ...............................*............
        smull r4, r7, r7, r11             // ...............................e............
        str.w r9, [r0, #892]              // ................................*...........
        ldr.w r9, [r0, #640]              // ................................e...........
        add r10, r12, r5                  // .................................*..........
        str.w r10, [r0, #508]             // .................................*..........
        ldr.w r8, [r0, #768]              // ..................................e.........
        smull r12, r6, r9, r11            // ..................................e.........
        sub.w r5, r10, r5, lsl #1         // ...................................*........
        mul r14, r4, r2                   // ...................................e........
        ldr.w r10, [r0, #384]             // ....................................e.......
        smull r8, r9, r8, r11             // ....................................e.......
        vmov r1, s9                       // .....................................*......
        smlal r4, r7, r14, r3             // .....................................e......
        cmp.w r0, r1                      // ......................................*..... // @slothy:id=cmp
        mul r4, r8, r2                    // ......................................e.....
        add r1, r10, r7                   // .......................................e....
        mul r14, r12, r2                  // .......................................e....
        ldr.w r10, [r0, #256]             // ........................................e...
        smlal r8, r9, r4, r3              // ........................................e...
        vmov r4, s3                       // .........................................e..
        smlal r12, r6, r14, r3            // .........................................e..
        add r8, r10, r9                   // ..........................................e.
        smull r14, r12, r1, r4            // ..........................................e.
        str.w r5, [r0, #636]              // ...........................................*
        bne layer123_loop                 // ...........................................* // @slothy:branch

                                            // -------------------- cycle (expected) -------------------->
                                            // 0                        25                       50
                                            // |------------------------|------------------------|--------
        // ldr.w R5, [R0]                   // ...............'.............*.............................
        // ldr.w R6, [R0, #1*512/4]         // ...............'..*........................................
        // ldr.w R7, [R0, #2*512/4]         // ...........e...'.......................................~...
        // ldr.w R8, [R0, #3*512/4]         // .......e.......'...................................~.......
        // ldr.w R4, [R0, #4*512/4]         // ...............'.......*...................................
        // ldr.w R11, [R0, #5*512/4]        // ...e...........'...............................~...........
        // ldr.w R12, [R0, #6*512/4]        // .....e.........'.................................~.........
        // ldr.w R14, [R0, #7*512/4]        // e..............'............................~..............
        // vmov R1, s2                      // .e.............'.............................~.............
        // smull R9, R4, R4, R1             // ...............'.........*.................................
        // mul R10, R9, R2                  // ...............'...........*...............................
        // smlal R9, R4, R10, R3            // ...............'.............*.............................
        // smull R9, R11, R11, R1           // .....e.........'.................................~.........
        // mul R10, R9, R2                  // ..........e....'......................................~....
        // smlal R9, R11, R10, R3           // ............e..'........................................~..
        // smull R9, R12, R12, R1           // .......e.......'...................................~.......
        // mul R10, R9, R2                  // .........e.....'.....................................~.....
        // smlal R9, R12, R10, R3           // ...........e...'.......................................~...
        // smull R9, R14, R14, R1           // ..e............'..............................~............
        // mul R10, R9, R2                  // ......e........'..................................~........
        // smlal R9, R14, R10, R3           // ........e......'....................................~......
        // add R5, R5, R4                   // ...............'...............*...........................
        // add R6, R6, R11                  // ...............'.....*.....................................
        // add R7, R7, R12                  // .............e.'.........................................~.
        // add R8, R8, R14                  // ..........e....'......................................~....
        // sub.w R4, R5, R4, lsl #1         // ...............'................*..........................
        // sub.w R11, R6, R11, lsl #1       // ...............'......*....................................
        // sub.w R12, R7, R12, lsl #1       // ...............*...........................................
        // sub.w R14, R8, R14, lsl #1       // ...............'*..........................................
        // vmov R1, s3                      // ............e..'........................................~..
        // smull R9, R7, R7, R1             // ...............'*..........................................
        // mul R10, R9, R2                  // ...............'..*........................................
        // smlal R9, R7, R10, R3            // ...............'....*......................................
        // smull R9, R8, R8, R1             // .............e.'.........................................~.
        // mul R10, R9, R2                  // ...............*...........................................
        // smlal R9, R8, R10, R3            // ...............'.*.........................................
        // vmov R1, s4                      // ...............'.*.........................................
        // smull R9, R12, R12, R1           // ...............'......*....................................
        // mul R10, R9, R2                  // ...............'........*..................................
        // smlal R9, R12, R10, R3           // ...............'..........*................................
        // smull R9, R14, R14, R1           // ...............'...*.......................................
        // mul R10, R9, R2                  // ...............'.....*.....................................
        // smlal R9, R14, R10, R3           // ...............'.......*...................................
        // add R5, R5, R7                   // ...............'..................*........................
        // add R6, R6, R8                   // ...............'........*..................................
        // add R4, R4, R12                  // ...............'...................*.......................
        // add R11, R11, R14                // ...............'..........*................................
        // sub.w R7, R5, R7, lsl #1         // ...............'....................*......................
        // sub.w R8, R6, R8, lsl #1         // ...............'.........*.................................
        // sub.w R12, R4, R12, lsl #1       // ...............'.........................*.................
        // sub.w R14, R11, R14, lsl #1      // ...............'............*..............................
        // vmov R1, s5                      // ...............'..............*............................
        // smull R9, R6, R6, R1             // ...............'...............*...........................
        // mul R10, R9, R2                  // ...............'.................*.........................
        // smlal R9, R6, R10, R3            // ...............'...................*.......................
        // vmov R1, s6                      // ...............'...........*...............................
        // smull R9, R8, R8, R1             // ...............'............*..............................
        // mul R10, R9, R2                  // ...............'..............*............................
        // smlal R9, R8, R10, R3            // ...............'................*..........................
        // vmov R1, s7                      // ...............'........................*..................
        // smull R9, R11, R11, R1           // ...............'.........................*.................
        // mul R10, R9, R2                  // ...............'...........................*...............
        // smlal R9, R11, R10, R3           // .~.............'.............................*.............
        // vmov R1, s8                      // ...............'.................*.........................
        // smull R9, R14, R14, R1           // ...............'..................*........................
        // mul R10, R9, R2                  // ...............'....................*......................
        // smlal R9, R14, R10, R3           // ...............'......................*....................
        // add R5, R5, R6                   // ...............'......................*....................
        // add R7, R7, R8                   // ...............'.....................*.....................
        // add R4, R4, R11                  // ....~..........'................................*..........
        // add R12, R12, R14                // ...............'..........................*................
        // sub.w R6, R5, R6, lsl #1         // ...............'.......................*...................
        // sub.w R8, R7, R8, lsl #1         // ...............'...........................*...............
        // sub.w R11, R4, R11, lsl #1       // ......~........'..................................*........
        // sub.w R14, R12, R14, lsl #1      // ..~............'..............................*............
        // str.w R6, [R0, #1*512/4]         // ...............'.......................*...................
        // str.w R7, [R0, #2*512/4]         // ...............'.....................*.....................
        // str.w R8, [R0, #3*512/4]         // ~..............'............................*..............
        // str.w R4, [R0, #4*512/4]         // ....~..........'................................*..........
        // str.w R11, [R0, #5*512/4]        // ..............~'..........................................*
        // str.w R12, [R0, #6*512/4]        // ...............'..........................*................
        // str.w R14, [R0, #7*512/4]        // ...~...........'...............................*...........
        // str R5, [R0], #4                 // ...............'........................*..................
        // vmov R10, s9                     // ........~......'....................................*......
        // cmp.w R0, R10                    // .........~.....'.....................................*.....
        // bne layer123_loop                // ..............~'..........................................*


                                           // Instructions:    67
                                           // Expected cycles: 34
                                           // Expected IPC:    1.97
                                           //
                                           // Cycle bound:     34.0
                                           // IPC bound:       1.97
                                           //
                                           // Wall time:     1732.08s
                                           // User time:     1732.08s
                                           //
                                           // ------- cycle (expected) -------->
                                           // 0                        25
                                           // |------------------------|--------
        sub.w r5, r8, r9, lsl #1           // *.................................
        mul r9, r14, r2                    // *.................................
        sub.w r7, r1, r7, lsl #1           // .*................................
        smull r10, r4, r8, r4              // .*................................
        ldr.w r1, [r0, #512]               // ..*...............................
        smlal r14, r12, r9, r3             // ..*...............................
        ldr.w r14, [r0, #128]              // ...*..............................
        mul r8, r10, r2                    // ...*..............................
        add r9, r14, r6                    // ....*.............................
        smull r14, r11, r1, r11            // ....*.............................
        add r1, r9, r12                    // .....*............................
        smlal r10, r4, r8, r3              // .....*............................
        vmov r10, s4                       // ......*...........................
        mul r8, r14, r2                    // ......*...........................
        sub.w r9, r9, r6, lsl #1           // .......*..........................
        smull r6, r5, r5, r10              // .......*..........................
        sub.w r12, r1, r12, lsl #1         // ........*.........................
        smlal r14, r11, r8, r3             // ........*.........................
        ldr.w r14, [r0]                    // .........*........................
        mul r8, r6, r2                     // .........*........................
        smull r10, r7, r7, r10             // ..........*.......................
        add r14, r14, r11                  // ...........*......................
        smlal r6, r5, r8, r3               // ...........*......................
        vmov r6, s5                        // ............*.....................
        mul r8, r10, r2                    // ............*.....................
        sub.w r11, r14, r11, lsl #1        // .............*....................
        smull r6, r1, r1, r6               // .............*....................
        add r11, r11, r5                   // ..............*...................
        smlal r10, r7, r8, r3              // ..............*...................
        vmov r10, s6                       // ...............*..................
        mul r8, r6, r2                     // ...............*..................
        add r9, r9, r7                     // ................*.................
        smull r10, r12, r12, r10           // ................*.................
        sub.w r7, r9, r7, lsl #1           // .................*................
        smlal r6, r1, r8, r3               // .................*................
        add r8, r14, r4                    // ..................*...............
        mul r14, r10, r2                   // ..................*...............
        add r6, r8, r1                     // ...................*..............
        str r6, [r0], #4                   // ...................*.............. // @slothy:core // @slothy:before=cmp
        sub.w r6, r6, r1, lsl #1           // ....................*.............
        smlal r10, r12, r14, r3            // ....................*.............
        vmov r1, s7                        // .....................*............
        str.w r6, [r0, #124]               // .....................*............
        sub.w r10, r8, r4, lsl #1          // ......................*...........
        smull r4, r8, r9, r1               // ......................*...........
        add r10, r10, r12                  // .......................*..........
        str.w r10, [r0, #252]              // .......................*..........
        vmov r1, s8                        // ........................*.........
        mul r6, r4, r2                     // ........................*.........
        sub.w r5, r11, r5, lsl #1          // .........................*........
        smull r9, r7, r7, r1               // .........................*........
        sub.w r12, r10, r12, lsl #1        // ..........................*.......
        smlal r4, r8, r6, r3               // ..........................*.......
        vmov r1, s9                        // ...........................*......
        mul r10, r9, r2                    // ...........................*......
        add r6, r11, r8                    // ............................*.....
        str.w r6, [r0, #508]               // ............................*.....
        sub.w r6, r6, r8, lsl #1           // .............................*....
        smlal r9, r7, r10, r3              // .............................*....
        str.w r6, [r0, #636]               // ..............................*...
        cmp.w r0, r1                       // ..............................*... // @slothy:id=cmp
        add r5, r5, r7                     // ...............................*..
        str.w r5, [r0, #764]               // ...............................*..
        sub.w r8, r5, r7, lsl #1           // ................................*.
        str.w r8, [r0, #892]               // ................................*.
        str.w r12, [r0, #380]              // .................................*

                                           // ------- cycle (expected) -------->
                                           // 0                        25
                                           // |------------------------|--------
        // sub.w r10, r8, r9, lsl #1       // *.................................
        // mul r9, r14, r2                 // *.................................
        // sub.w r5, r1, r7, lsl #1        // .*................................
        // smull r7, r4, r8, r4            // .*................................
        // vmov r1, s4                     // ......*...........................
        // smlal r14, r12, r9, r3          // ..*...............................
        // ldr.w r9, [r0, #128]            // ...*..............................
        // mul r14, r7, r2                 // ...*..............................
        // smull r8, r5, r5, r1            // ..........*.......................
        // smlal r7, r4, r14, r3           // .....*............................
        // add r14, r9, r6                 // ....*.............................
        // mul r7, r8, r2                  // ............*.....................
        // sub.w r6, r14, r6, lsl #1       // .......*..........................
        // smull r1, r10, r10, r1          // .......*..........................
        // ldr.w r9, [r0, #512]            // ..*...............................
        // smlal r8, r5, r7, r3            // ..............*...................
        // add r7, r14, r12                // .....*............................
        // mul r8, r1, r2                  // .........*........................
        // sub.w r14, r7, r12, lsl #1      // ........*.........................
        // smull r9, r12, r9, r11          // ....*.............................
        // add r11, r6, r5                 // ................*.................
        // smlal r1, r10, r8, r3           // ...........*......................
        // vmov r1, s6                     // ...............*..................
        // mul r6, r9, r2                  // ......*...........................
        // sub.w r5, r11, r5, lsl #1       // .................*................
        // smull r14, r1, r14, r1          // ................*.................
        // ldr.w r8, [r0]                  // .........*........................
        // smlal r9, r12, r6, r3           // ........*.........................
        // vmov r6, s5                     // ............*.....................
        // mul r9, r14, r2                 // ..................*...............
        // add r8, r8, r12                 // ...........*......................
        // smull r6, r7, r7, r6            // .............*....................
        // sub.w r12, r8, r12, lsl #1      // .............*....................
        // smlal r14, r1, r9, r3           // ....................*.............
        // vmov r14, s8                    // ........................*.........
        // mul r9, r6, r2                  // ...............*..................
        // add r8, r8, r4                  // ..................*...............
        // smull r5, r14, r5, r14          // .........................*........
        // add r12, r12, r10               // ..............*...................
        // smlal r6, r7, r9, r3            // .................*................
        // sub.w r6, r8, r4, lsl #1        // ......................*...........
        // mul r9, r5, r2                  // ...........................*......
        // add r6, r6, r1                  // .......................*..........
        // str.w r6, [r0, #256]            // .......................*..........
        // add r4, r8, r7                  // ...................*..............
        // smlal r5, r14, r9, r3           // .............................*....
        // sub.w r8, r4, r7, lsl #1        // ....................*.............
        // str.w r8, [r0, #128]            // .....................*............
        // str r4, [r0], #4                // ...................*..............
        // vmov r9, s7                     // .....................*............
        // sub.w r8, r12, r10, lsl #1      // .........................*........
        // smull r4, r5, r11, r9           // ......................*...........
        // add r9, r8, r14                 // ...............................*..
        // str.w r9, [r0, #764]            // ...............................*..
        // sub.w r8, r6, r1, lsl #1        // ..........................*.......
        // mul r10, r4, r2                 // ........................*.........
        // str.w r8, [r0, #380]            // .................................*
        // smlal r4, r5, r10, r3           // ..........................*.......
        // sub.w r9, r9, r14, lsl #1       // ................................*.
        // str.w r9, [r0, #892]            // ................................*.
        // add r10, r12, r5                // ............................*.....
        // str.w r10, [r0, #508]           // ............................*.....
        // sub.w r5, r10, r5, lsl #1       // .............................*....
        // vmov r1, s9                     // ...........................*......
        // cmp.w r0, r1                    // ..............................*...
        // str.w r5, [r0, #636]            // ..............................*...
        // bne layer123_loop               // .................................*


  sub ptr_p, #32*4

  // stage 4 - 6
  .equ distance2, 64
  add.w temp_l, ptr_p, #8*112+8*4*4 // 8 iterations
  vmov s9, temp_l
  1:
    add.w temp_l, ptr_p, #4*strincr // 4 iterations
    vmov s10, temp_l
    vmov ptr_zeta, s0
    vldm ptr_zeta!, {s2-s8}
    vmov s0, ptr_zeta
                                         // Instructions:    20
                                         // Expected cycles: 12
                                         // Expected IPC:    1.67
                                         //
                                         // Cycle bound:     12.0
                                         // IPC bound:       1.67
                                         //
                                         // Wall time:     0.06s
                                         // User time:     0.06s
                                         //
                                         // ----- cycle (expected) ------>
                                         // 0                        25
                                         // |------------------------|----
        ldr.w r8, [r0, #96]              // *.............................
        vmov r10, s2                     // *.............................
        ldr.w r12, [r0, #112]            // .*............................
        ldr.w r7, [r0, #32]              // ..*...........................
        smull r8, r14, r8, r10           // ..*...........................
        ldr.w r5, [r0, #80]              // ...*..........................
        smull r11, r4, r12, r10          // ...*..........................
        vmov r12, s4                     // ....*.........................
        mul r9, r8, r2                   // ....*.........................
        mul r6, r11, r2                  // .....*........................
        smlal r8, r14, r9, r3            // ......*.......................
        smull r1, r9, r5, r10            // .......*......................
        add r7, r7, r14                  // ........*.....................
        smlal r11, r4, r6, r3            // ........*.....................
        sub.w r6, r7, r14, lsl #1        // .........*....................
        mul r5, r1, r2                   // .........*....................
        ldr.w r14, [r0, #48]             // ..........*...................
        smull r8, r11, r6, r12           // ..........*...................
        add r14, r14, r4                 // ...........*..................
        smlal r1, r9, r5, r3             // ...........*..................

                                         // ------ cycle (expected) ------>
                                         // 0                        25
                                         // |------------------------|-----
        // ldr.w r5, [r0, #96]           // *..............................
        // vmov r10, s2                  // *..............................
        // smull r12, r5, r5, r10        // ..*............................
        // ldr.w r7, [r0, #32]           // ..*............................
        // ldr.w r4, [r0, #112]          // .*.............................
        // mul r6, r12, r2               // ....*..........................
        // ldr.w r8, [r0, #80]           // ...*...........................
        // smlal r12, r5, r6, r3         // ......*........................
        // add r7, r7, r5                // ........*......................
        // smull r11, r4, r4, r10        // ...*...........................
        // smull r6, r9, r8, r10         // .......*.......................
        // sub.w r8, r7, r5, lsl #1      // .........*.....................
        // mul r12, r11, r2              // .....*.........................
        // mul r14, r6, r2               // .........*.....................
        // ldr.w r1, [r0, #48]           // ..........*....................
        // smlal r11, r4, r12, r3        // ........*......................
        // vmov r12, s4                  // ....*..........................
        // smlal r6, r9, r14, r3         // ...........*...................
        // add r14, r1, r4               // ...........*...................
        // smull r8, r11, r8, r12        // ..........*....................

        push {r6}
        vmov r6, s10
        sub r6, r6, #4
        vmov s10, r6
        pop {r6}
layer456_loop:
                                           // Instructions:    86
                                           // Expected cycles: 44
                                           // Expected IPC:    1.95
                                           //
                                           // Cycle bound:     44.0
                                           // IPC bound:       1.95
                                           //
                                           // Wall time:     663.78s
                                           // User time:     663.78s
                                           //
                                           // ------------ cycle (expected) ------------->
                                           // 0                        25
                                           // |------------------------|------------------
        sub.w r4, r14, r4, lsl #1          // *...........................................
        mul r6, r8, r2                     // *...........................................
        ldr.w r1, [r0, #16]                // .*..........................................
        smull r5, r4, r4, r12              // .*..........................................
        ldr.w r12, [r0, #64]               // ..*.........................................
        smlal r8, r11, r6, r3              // ..*.........................................
        add r1, r1, r9                     // ...*........................................
        mul r8, r5, r2                     // ...*........................................
        sub.w r6, r1, r9, lsl #1           // ....*.......................................
        smull r9, r12, r12, r10            // ....*.......................................
        smlal r5, r4, r8, r3               // .....*......................................
        vmov r5, s3                        // ......*.....................................
        mul r8, r9, r2                     // ......*.....................................
        add r6, r6, r4                     // .......*....................................
        smull r7, r10, r7, r5              // .......*....................................
        sub.w r4, r6, r4, lsl #1           // ........*...................................
        smlal r9, r12, r8, r3              // ........*...................................
        ldr.w r9, [r0]                     // .........*..................................
        mul r8, r7, r2                     // .........*..................................
        smull r14, r5, r14, r5             // ..........*.................................
        add r9, r9, r12                    // ...........*................................
        smlal r7, r10, r8, r3              // ...........*................................
        vmov r7, s8                        // ............*...............................
        mul r8, r14, r2                    // ............*...............................
        sub.w r12, r9, r12, lsl #1         // .............*..............................
        smull r4, r7, r4, r7               // .............*..............................
        add r12, r12, r11                  // ..............*.............................
        smlal r14, r5, r8, r3              // ..............*.............................
        vmov r14, s7                       // ...............*............................
        mul r8, r4, r2                     // ...............*............................
        sub.w r11, r12, r11, lsl #1        // ................*...........................
        smull r6, r14, r6, r14             // ................*...........................
        add r9, r9, r10                    // .................*..........................
        smlal r4, r7, r8, r3               // .................*..........................
        add r8, r1, r5                     // ..................*.........................
        mul r1, r6, r2                     // ..................*.........................
        add r11, r11, r7                   // ...................*........................
        str.w r11, [r0, #96]               // ...................*........................
        sub.w r11, r11, r7, lsl #1         // ....................*.......................
        str.w r11, [r0, #112]              // ....................*.......................
        vmov r4, s5                        // .....................*......................
        smlal r6, r14, r1, r3              // .....................*......................
        vmov r1, s6                        // ......................*.....................
        smull r6, r11, r8, r4              // ......................*.....................
        add r12, r12, r14                  // .......................*....................
        str.w r12, [r0, #64]               // .......................*....................
        sub.w r4, r8, r5, lsl #1           // ........................*...................
        mul r7, r6, r2                     // ........................*...................
        sub.w r8, r9, r10, lsl #1          // .........................*..................
        smull r4, r1, r4, r1               // .........................*..................
        sub.w r12, r12, r14, lsl #1        // ..........................*.................
        str.w r12, [r0, #80]               // ..........................*.................
        ldr.w r5, [r0, #100]               // ...........................e................
        smlal r6, r11, r7, r3              // ...........................*................
        vmov r10, s2                       // ............................e...............
        mul r6, r4, r2                     // ............................*...............
        add r9, r9, r11                    // .............................*..............
        smull r12, r5, r5, r10             // .............................e..............
        ldr.w r7, [r0, #36]                // ..............................e.............
        smlal r4, r1, r6, r3               // ..............................*.............
        ldr.w r4, [r0, #116]               // ...............................e............
        mul r6, r12, r2                    // ...............................e............
        add r14, r8, r1                    // ................................*...........
        str.w r14, [r0, #32]               // ................................*...........
        ldr.w r8, [r0, #84]                // .................................e..........
        smlal r12, r5, r6, r3              // .................................e..........
        vmov r6, s10                       // ..................................*.........
        str r9, [r0], #4                   // ..................................*......... // @slothy:core // @slothy:before=cmp
        sub.w r12, r9, r11, lsl #1         // ...................................*........
        str.w r12, [r0, #12]               // ...................................*........
        add r7, r7, r5                     // ....................................e.......
        smull r11, r4, r4, r10             // ....................................e.......
        cmp.w r0, r6                       // .....................................*...... // @slothy:id=cmp
        smull r6, r9, r8, r10              // .....................................e......
        sub.w r8, r7, r5, lsl #1           // ......................................e.....
        mul r12, r11, r2                   // ......................................e.....
        sub.w r5, r14, r1, lsl #1          // .......................................*....
        mul r14, r6, r2                    // .......................................e....
        ldr.w r1, [r0, #48]                // ........................................e...
        smlal r11, r4, r12, r3             // ........................................e...
        vmov r12, s4                       // .........................................e..
        smlal r6, r9, r14, r3              // .........................................e..
        add r14, r1, r4                    // ..........................................e.
        smull r8, r11, r8, r12             // ..........................................e.
        str.w r5, [r0, #44]                // ...........................................*
        bne layer456_loop                  // ...........................................* // @slothy:branch

                                            // --------------------- cycle (expected) --------------------->
                                            // 0                        25                       50
                                            // |------------------------|------------------------|----------
        // ldr.w R5, [R0]                   // .................'........*..................................
        // ldr.w R6, [R0, #1*64/4]          // .................'*..........................................
        // ldr.w R7, [R0, #2*64/4]          // ...e.............'.............................~.............
        // ldr.w R8, [R0, #3*64/4]          // .............e...'.......................................~...
        // ldr.w R4, [R0, #4*64/4]          // .................'.*.........................................
        // ldr.w R11, [R0, #5*64/4]         // ......e..........'................................~..........
        // ldr.w R12, [R0, #6*64/4]         // e................'..........................~................
        // ldr.w R14, [R0, #7*64/4]         // ....e............'..............................~............
        // vmov R1, s2                      // .e...............'...........................~...............
        // smull R9, R4, R4, R1             // .................'...*.......................................
        // mul R10, R9, R2                  // .................'.....*.....................................
        // smlal R9, R4, R10, R3            // .................'.......*...................................
        // smull R9, R11, R11, R1           // ..........e......'....................................~......
        // mul R10, R9, R2                  // ............e....'......................................~....
        // smlal R9, R11, R10, R3           // ..............e..'........................................~..
        // smull R9, R12, R12, R1           // ..e..............'............................~..............
        // mul R10, R9, R2                  // ....e............'..............................~............
        // smlal R9, R12, R10, R3           // ......e..........'................................~..........
        // smull R9, R14, R14, R1           // .........e.......'...................................~.......
        // mul R10, R9, R2                  // ...........e.....'.....................................~.....
        // smlal R9, R14, R10, R3           // .............e...'.......................................~...
        // add R5, R5, R4                   // .................'..........*................................
        // add R6, R6, R11                  // .................'..*........................................
        // add R7, R7, R12                  // .........e.......'...................................~.......
        // add R8, R8, R14                  // ...............e.'.........................................~.
        // sub.w R4, R5, R4, lsl #1         // .................'............*..............................
        // sub.w R11, R6, R11, lsl #1       // .................'...*.......................................
        // sub.w R12, R7, R12, lsl #1       // ...........e.....'.....................................~.....
        // sub.w R14, R8, R14, lsl #1       // .................*...........................................
        // vmov R1, s3                      // .................'.....*.....................................
        // smull R9, R7, R7, R1             // .................'......*....................................
        // mul R10, R9, R2                  // .................'........*..................................
        // smlal R9, R7, R10, R3            // .................'..........*................................
        // smull R9, R8, R8, R1             // .................'.........*.................................
        // mul R10, R9, R2                  // .................'...........*...............................
        // smlal R9, R8, R10, R3            // .................'.............*.............................
        // vmov R1, s4                      // ..............e..'........................................~..
        // smull R9, R12, R12, R1           // ...............e.'.........................................~.
        // mul R10, R9, R2                  // .................*...........................................
        // smlal R9, R12, R10, R3           // .................'.*.........................................
        // smull R9, R14, R14, R1           // .................'*..........................................
        // mul R10, R9, R2                  // .................'..*........................................
        // smlal R9, R14, R10, R3           // .................'....*......................................
        // add R5, R5, R7                   // .................'................*..........................
        // add R6, R6, R8                   // .................'.................*.........................
        // add R4, R4, R12                  // .................'.............*.............................
        // add R11, R11, R14                // .................'......*....................................
        // sub.w R7, R5, R7, lsl #1         // .................'........................*..................
        // sub.w R8, R6, R8, lsl #1         // .................'.......................*...................
        // sub.w R12, R4, R12, lsl #1       // .................'...............*...........................
        // sub.w R14, R11, R14, lsl #1      // .................'.......*...................................
        // vmov R1, s5                      // .................'....................*......................
        // smull R9, R6, R6, R1             // .................'.....................*.....................
        // mul R10, R9, R2                  // .................'.......................*...................
        // smlal R9, R6, R10, R3            // ~................'..........................*................
        // vmov R1, s6                      // .................'.....................*.....................
        // smull R9, R8, R8, R1             // .................'........................*..................
        // mul R10, R9, R2                  // .~...............'...........................*...............
        // smlal R9, R8, R10, R3            // ...~.............'.............................*.............
        // vmov R1, s7                      // .................'..............*............................
        // smull R9, R11, R11, R1           // .................'...............*...........................
        // mul R10, R9, R2                  // .................'.................*.........................
        // smlal R9, R11, R10, R3           // .................'....................*......................
        // vmov R1, s8                      // .................'...........*...............................
        // smull R9, R14, R14, R1           // .................'............*..............................
        // mul R10, R9, R2                  // .................'..............*............................
        // smlal R9, R14, R10, R3           // .................'................*..........................
        // add R5, R5, R6                   // ..~..............'............................*..............
        // add R7, R7, R8                   // .....~...........'...............................*...........
        // add R4, R4, R11                  // .................'......................*....................
        // add R12, R12, R14                // .................'..................*........................
        // sub.w R6, R5, R6, lsl #1         // ........~........'..................................*........
        // sub.w R8, R7, R8, lsl #1         // ............~....'......................................*....
        // sub.w R11, R4, R11, lsl #1       // .................'.........................*.................
        // sub.w R14, R12, R14, lsl #1      // .................'...................*.......................
        // str.w R6, [R0, #1*64/4]          // ........~........'..................................*........
        // str.w R7, [R0, #2*64/4]          // .....~...........'...............................*...........
        // str.w R8, [R0, #3*64/4]          // ................~'..........................................*
        // str.w R4, [R0, #4*64/4]          // .................'......................*....................
        // str.w R11, [R0, #5*64/4]         // .................'.........................*.................
        // str.w R12, [R0, #6*64/4]         // .................'..................*........................
        // str.w R14, [R0, #7*64/4]         // .................'...................*.......................
        // str R5, [R0], #4                 // .......~.........'.................................*.........
        // vmov R10, s10                    // .......~.........'.................................*.........
        // cmp.w R0, R10                    // ..........~......'....................................*......
        // bne layer456_loop                // ................~'..........................................*


                                           // Instructions:    66
                                           // Expected cycles: 34
                                           // Expected IPC:    1.94
                                           //
                                           // Cycle bound:     34.0
                                           // IPC bound:       1.94
                                           //
                                           // Wall time:     7.08s
                                           // User time:     7.08s
                                           //
                                           // ------- cycle (expected) -------->
                                           // 0                        25
                                           // |------------------------|--------
        sub.w r4, r14, r4, lsl #1          // *.................................
        mul r5, r8, r2                     // *.................................
        smull r1, r12, r4, r12             // .*................................
        ldr.w r4, [r0, #64]                // ..*...............................
        smlal r8, r11, r5, r3              // ..*...............................
        ldr.w r8, [r0, #16]                // ...*..............................
        mul r5, r1, r2                     // ...*..............................
        add r8, r8, r9                     // ....*.............................
        smull r6, r4, r4, r10              // ....*.............................
        sub.w r9, r8, r9, lsl #1           // .....*............................
        smlal r1, r12, r5, r3              // .....*............................
        vmov r5, s3                        // ......*...........................
        mul r10, r6, r2                    // ......*...........................
        add r9, r9, r12                    // .......*..........................
        smull r1, r7, r7, r5               // .......*..........................
        sub.w r12, r9, r12, lsl #1         // ........*.........................
        smlal r6, r4, r10, r3              // ........*.........................
        ldr.w r10, [r0]                    // .........*........................
        mul r6, r1, r2                     // .........*........................
        smull r5, r14, r14, r5             // ..........*.......................
        add r10, r10, r4                   // ...........*......................
        smlal r1, r7, r6, r3               // ...........*......................
        vmov r1, s8                        // ............*.....................
        mul r6, r5, r2                     // ............*.....................
        sub.w r4, r10, r4, lsl #1          // .............*....................
        smull r1, r12, r12, r1             // .............*....................
        add r4, r4, r11                    // ..............*...................
        smlal r5, r14, r6, r3              // ..............*...................
        vmov r6, s7                        // ...............*..................
        mul r5, r1, r2                     // ...............*..................
        sub.w r11, r4, r11, lsl #1         // ................*.................
        smull r9, r6, r9, r6               // ................*.................
        add r8, r8, r14                    // .................*................
        smlal r1, r12, r5, r3              // .................*................
        vmov r1, s5                        // ..................*...............
        mul r5, r9, r2                     // ..................*...............
        add r11, r11, r12                  // ...................*..............
        str.w r11, [r0, #96]               // ...................*..............
        sub.w r12, r11, r12, lsl #1        // ....................*.............
        str.w r12, [r0, #112]              // ....................*.............
        sub.w r14, r8, r14, lsl #1         // .....................*............
        smlal r9, r6, r5, r3               // .....................*............
        vmov r5, s6                        // ......................*...........
        smull r1, r11, r8, r1              // ......................*...........
        add r12, r4, r6                    // .......................*..........
        smull r5, r14, r14, r5             // .......................*..........
        sub.w r8, r12, r6, lsl #1          // ........................*.........
        mul r6, r1, r2                     // ........................*.........
        str.w r8, [r0, #80]                // .........................*........
        add r4, r10, r7                    // .........................*........
        sub.w r10, r4, r7, lsl #1          // ..........................*.......
        smlal r1, r11, r6, r3              // ..........................*.......
        vmov r9, s10                       // ...........................*......
        mul r6, r5, r2                     // ...........................*......
        add r1, r4, r11                    // ............................*.....
        str r1, [r0], #4                   // ............................*..... // @slothy:core // @slothy:before=cmp
        cmp.w r0, r9                       // .............................*.... // @slothy:id=cmp
        smlal r5, r14, r6, r3              // .............................*....
        sub.w r1, r1, r11, lsl #1          // ..............................*...
        str.w r1, [r0, #12]                // ..............................*...
        add r10, r10, r14                  // ...............................*..
        str.w r10, [r0, #28]               // ...............................*..
        sub.w r9, r10, r14, lsl #1         // ................................*.
        str.w r9, [r0, #44]                // ................................*.
        str.w r12, [r0, #60]               // .................................*

                                            // ------- cycle (expected) -------->
                                            // 0                        25
                                            // |------------------------|--------
        // sub.w r4, r14, r4, lsl #1        // *.................................
        // mul r6, r8, r2                   // *.................................
        // ldr.w r1, [r0, #16]              // ...*..............................
        // smull r5, r4, r4, r12            // .*................................
        // ldr.w r12, [r0, #64]             // ..*...............................
        // smlal r8, r11, r6, r3            // ..*...............................
        // add r1, r1, r9                   // ....*.............................
        // mul r8, r5, r2                   // ...*..............................
        // sub.w r6, r1, r9, lsl #1         // .....*............................
        // smull r9, r12, r12, r10          // ....*.............................
        // smlal r5, r4, r8, r3             // .....*............................
        // vmov r5, s3                      // ......*...........................
        // mul r8, r9, r2                   // ......*...........................
        // add r6, r6, r4                   // .......*..........................
        // smull r7, r10, r7, r5            // .......*..........................
        // sub.w r4, r6, r4, lsl #1         // ........*.........................
        // smlal r9, r12, r8, r3            // ........*.........................
        // ldr.w r9, [r0]                   // .........*........................
        // mul r8, r7, r2                   // .........*........................
        // smull r14, r5, r14, r5           // ..........*.......................
        // add r9, r9, r12                  // ...........*......................
        // smlal r7, r10, r8, r3            // ...........*......................
        // vmov r7, s8                      // ............*.....................
        // mul r8, r14, r2                  // ............*.....................
        // sub.w r12, r9, r12, lsl #1       // .............*....................
        // smull r4, r7, r4, r7             // .............*....................
        // add r12, r12, r11                // ..............*...................
        // smlal r14, r5, r8, r3            // ..............*...................
        // vmov r14, s7                     // ...............*..................
        // mul r8, r4, r2                   // ...............*..................
        // sub.w r11, r12, r11, lsl #1      // ................*.................
        // smull r6, r14, r6, r14           // ................*.................
        // add r9, r9, r10                  // .........................*........
        // smlal r4, r7, r8, r3             // .................*................
        // add r8, r1, r5                   // .................*................
        // mul r1, r6, r2                   // ..................*...............
        // add r11, r11, r7                 // ...................*..............
        // str.w r11, [r0, #96]             // ...................*..............
        // sub.w r11, r11, r7, lsl #1       // ....................*.............
        // str.w r11, [r0, #112]            // ....................*.............
        // vmov r4, s5                      // ..................*...............
        // smlal r6, r14, r1, r3            // .....................*............
        // vmov r1, s6                      // ......................*...........
        // smull r6, r11, r8, r4            // ......................*...........
        // add r12, r12, r14                // .......................*..........
        // str.w r12, [r0, #64]             // .................................*
        // sub.w r4, r8, r5, lsl #1         // .....................*............
        // mul r7, r6, r2                   // ........................*.........
        // sub.w r8, r9, r10, lsl #1        // ..........................*.......
        // smull r4, r1, r4, r1             // .......................*..........
        // sub.w r12, r12, r14, lsl #1      // ........................*.........
        // str.w r12, [r0, #80]             // .........................*........
        // smlal r6, r11, r7, r3            // ..........................*.......
        // mul r6, r4, r2                   // ...........................*......
        // add r9, r9, r11                  // ............................*.....
        // smlal r4, r1, r6, r3             // .............................*....
        // add r14, r8, r1                  // ...............................*..
        // str.w r14, [r0, #32]             // ...............................*..
        // vmov r6, s10                     // ...........................*......
        // str r9, [r0], #4                 // ............................*.....
        // sub.w r12, r9, r11, lsl #1       // ..............................*...
        // str.w r12, [r0, #12]             // ..............................*...
        // cmp.w r0, r6                     // .............................*....
        // sub.w r5, r14, r1, lsl #1        // ................................*.
        // str.w r5, [r0, #44]              // ................................*.
        // bne layer456_loop                // .................................*


    add.w ptr_p, #112
    vmov temp_l, s9
    cmp.w ptr_p, temp_l
    bne 1b

    sub ptr_p, #4*4*8+112*8
    vmov ptr_zeta, s0
    // stage 7 and 8
    add cntr, ptr_p, #1024 // 64 iterations

                                          // Instructions:    22
                                          // Expected cycles: 17
                                          // Expected IPC:    1.29
                                          //
                                          // Cycle bound:     17.0
                                          // IPC bound:       1.29
                                          //
                                          // Wall time:     0.07s
                                          // User time:     0.07s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        ldr.w r12, [r0, #12]              // *.............................
        ldr.w r6, [r0, #8]                // *.............................
        ldr r5, [r1], #12                 // .*............................
        ldr r8, [r1, #-8]                 // .*............................
        ldr.w r11, [r0, #4]               // ..*...........................
        ldr.w r7, [r0]                    // ..*...........................
        ldr r10, [r1, #-4]                // ...*..........................
        smull r9, r14, r12, r5            // ...*..........................
        smull r12, r5, r6, r5             // ....*.........................
        mul r6, r9, r2                    // .....*........................
        smlal r9, r14, r6, r3             // .......*......................
        mul r9, r12, r2                   // ........*.....................
        add r6, r11, r14                  // .........*....................
        sub.w r11, r6, r14, lsl #1        // ..........*...................
        smull r8, r6, r6, r8              // ..........*...................
        smlal r12, r5, r9, r3             // ...........*..................
        mul r12, r8, r2                   // ............*.................
        add r14, r7, r5                   // .............*................
        smull r7, r9, r11, r10            // .............*................
        sub.w r10, r14, r5, lsl #1        // ..............*...............
        smlal r8, r6, r12, r3             // ..............*...............
        add r14, r14, r6                  // ................*.............

                                            // ------ cycle (expected) ------>
                                            // 0                        25
                                            // |------------------------|-----
        // ldr.w r5, [r0, #12]              // *..............................
        // ldr r12, [r1], #12               // .*.............................
        // ldr.w r11, [r0, #4]              // ..*............................
        // smull r6, r5, r5, r12            // ...*...........................
        // ldr.w r8, [r0, #8]               // *..............................
        // mul r14, r6, r2                  // .....*.........................
        // smull r9, r12, r8, r12           // ....*..........................
        // smlal r6, r5, r14, r3            // .......*.......................
        // ldr r10, [r1, #-8]               // .*.............................
        // add r6, r11, r5                  // .........*.....................
        // mul r11, r9, r2                  // ........*......................
        // sub.w r14, r6, r5, lsl #1        // ..........*....................
        // smull r8, r6, r6, r10            // ..........*....................
        // ldr.w r10, [r0]                  // ..*............................
        // smlal r9, r12, r11, r3           // ...........*...................
        // ldr r5, [r1, #-4]                // ...*...........................
        // mul r9, r8, r2                   // ............*..................
        // add r11, r10, r12                // .............*.................
        // smlal r8, r6, r9, r3             // ..............*................
        // sub.w r10, r11, r12, lsl #1      // ..............*................
        // smull r7, r9, r14, r5            // .............*.................
        // add r14, r11, r6                 // ................*..............

        sub r4, r4, #16
layer78_loop:
                                           // Instructions:    33
                                           // Expected cycles: 17
                                           // Expected IPC:    1.94
                                           //
                                           // Cycle bound:     17.0
                                           // IPC bound:       1.94
                                           //
                                           // Wall time:     5.70s
                                           // User time:     5.70s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        ldr.w r5, [r0, #28]                // e.............................
        mul r8, r7, r2                     // *.............................
        ldr r12, [r1], #12                 // .e............................
        str r14, [r0], #16                 // .*............................ // @slothy:core // @slothy:before=cmp
        sub.w r14, r14, r6, lsl #1         // ..*...........................
        smlal r7, r9, r8, r3               // ..*...........................
        ldr.w r11, [r0, #4]                // ...e..........................
        smull r6, r5, r5, r12              // ...e..........................
        ldr.w r8, [r0, #8]                 // ....e.........................
        str r14, [r0, #-12]                // ....*.........................
        add r7, r10, r9                    // .....*........................
        mul r14, r6, r2                    // .....e........................
        sub.w r10, r7, r9, lsl #1          // ......*.......................
        smull r9, r12, r8, r12             // ......e.......................
        cmp.w r0, r4                       // .......*...................... // @slothy:id=cmp
        smlal r6, r5, r14, r3              // .......e......................
        str r10, [r0, #-4]                 // ........*.....................
        ldr r10, [r1, #-8]                 // ........e.....................
        add r6, r11, r5                    // .........e....................
        mul r11, r9, r2                    // .........e....................
        sub.w r14, r6, r5, lsl #1          // ..........e...................
        smull r8, r6, r6, r10              // ..........e...................
        ldr.w r10, [r0]                    // ...........e..................
        smlal r9, r12, r11, r3             // ...........e..................
        ldr r5, [r1, #-4]                  // ............e.................
        mul r9, r8, r2                     // ............e.................
        str r7, [r0, #-8]                  // .............*................
        add r11, r10, r12                  // ..............e...............
        smlal r8, r6, r9, r3               // ..............e...............
        sub.w r10, r11, r12, lsl #1        // ...............e..............
        smull r7, r9, r14, r5              // ...............e..............
        add r14, r11, r6                   // ................e.............
        bne.w layer78_loop                 // ................*............. // @slothy:branch

                                         // ------- cycle (expected) -------->
                                         // 0                        25
                                         // |------------------------|--------
        // ldr.w R12, [R1, #4]           // ........e........'.......~........
        // ldr.w R14, [R1, #8]           // ............e....'...........~....
        // ldr R11, [R1], #12            // .e...............'~...............
        // ldr.w R5, [R0]                // ...........e.....'..........~.....
        // ldr.w R6, [R0, #4]            // ...e.............'..~.............
        // ldr.w R7, [R0, #8]            // ....e............'...~............
        // ldr.w R8, [R0, #12]           // e................~................
        // smull R9, R7, R7, R11         // ......e..........'.....~..........
        // mul R10, R9, R2               // .........e.......'........~.......
        // smlal R9, R7, R10, R3         // ...........e.....'..........~.....
        // smull R9, R8, R8, R11         // ...e.............'..~.............
        // mul R10, R9, R2               // .....e...........'....~...........
        // smlal R9, R8, R10, R3         // .......e.........'......~.........
        // add R5, R5, R7                // ..............e..'.............~..
        // add R6, R6, R8                // .........e.......'........~.......
        // sub.w R7, R5, R7, lsl #1      // ...............e.'..............~.
        // sub.w R8, R6, R8, lsl #1      // ..........e......'.........~......
        // smull R9, R6, R6, R12         // ..........e......'.........~......
        // mul R10, R9, R2               // ............e....'...........~....
        // smlal R9, R6, R10, R3         // ..............e..'.............~..
        // smull R9, R8, R8, R14         // ...............e.'..............~.
        // mul R10, R9, R2               // ~................*................
        // smlal R9, R8, R10, R3         // ..~..............'.*..............
        // add R5, R5, R6                // ................e'................
        // add R7, R7, R8                // .....~...........'....*...........
        // sub.w R6, R5, R6, lsl #1      // ..~..............'.*..............
        // sub.w R8, R7, R8, lsl #1      // ......~..........'.....*..........
        // str.w R6, [R0, #4]            // ....~............'...*............
        // str.w R7, [R0, #8]            // .............~...'............*...
        // str.w R8, [R0, #12]           // ........~........'.......*........
        // str R5, [R0], #16             // .~...............'*...............
        // cmp.w R0, R4                  // .......~.........'......*.........
        // bne.w layer78_loop            // ................~'...............*


                                          // Instructions:    11
                                          // Expected cycles: 7
                                          // Expected IPC:    1.57
                                          //
                                          // Cycle bound:     7.0
                                          // IPC bound:       1.57
                                          //
                                          // Wall time:     0.02s
                                          // User time:     0.02s
                                          //
                                          // ----- cycle (expected) ------>
                                          // 0                        25
                                          // |------------------------|----
        sub.w r12, r14, r6, lsl #1        // *.............................
        mul r6, r7, r2                    // *.............................
        str r12, [r0, #4]                 // .*............................
        smlal r7, r9, r6, r3              // ..*...........................
        str r14, [r0], #16                // ...*.......................... // @slothy:core // @slothy:before=cmp
        cmp.w r0, r4                      // ...*.......................... // @slothy:id=cmp
        add r12, r10, r9                  // ....*.........................
        str r12, [r0, #-8]                // ....*.........................
        sub.w r12, r12, r9, lsl #1        // .....*........................
        str r12, [r0, #-4]                // .....*........................

                                           // ------ cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|-----
        // mul r8, r7, r2                  // *..............................
        // str r14, [r0], #16              // ...*...........................
        // sub.w r14, r14, r6, lsl #1      // *..............................
        // smlal r7, r9, r8, r3            // ..*............................
        // str r14, [r0, #-12]             // .*.............................
        // add r7, r10, r9                 // ....*..........................
        // sub.w r10, r7, r9, lsl #1       // .....*.........................
        // cmp.w r0, r4                    // ...*...........................
        // str r10, [r0, #-4]              // .....*.........................
        // str r7, [r0, #-8]               // ....*..........................
        // bne.w layer78_loop              // ......*........................


    // restore registers
    pop {R4-R11, PC}

    // unbind aliases
    .unreq ptr_p
    .unreq ptr_zeta
    .unreq qinv
    .unreq q
    .unreq cntr
    .unreq pol0
    .unreq pol1
    .unreq pol2
    .unreq pol3
    .unreq temp_h
    .unreq temp_l
    .unreq zeta0
    .unreq zeta1
    .unreq zeta2

.size pqcrystals_dilithium_ntt_opt_m7, .-pqcrystals_dilithium_ntt_opt_m7

.align 2
inv_ntt_asm_smull_qinv:
.word 0xfc7fdfff
.align 2
inv_ntt_asm_smull_q:
.word 8380417

.section .rodata

.type zetas_new332, %object
.align 2
zetas_new332:
.word 25847, -2608894, -518909, 237124, -777960, -876248, 466468, 1826347, 2725464, 1024112, 2706023, 95776, 3077325, 3530437, 2353451, -1079900, 3585928, -1661693, -3592148, -2537516, 3915439, -359251, -549488, -1119584, -3861115, -3043716, 3574422, -2867647, -2091905, 2619752, -2108549, 3539968, -300467, 2348700, -539299, 3119733, -2118186, -3859737, -1699267, -1643818, 3505694, -3821735, -2884855, -1399561, -3277672, 3507263, -2140649, -1600420, 3699596, 3111497, 1757237, -19422, 811944, 531354, 954230, 3881043, 2680103, 4010497, 280005, 3900724, -2556880, 2071892, -2797779, -3930395, 2091667, 3407706, -1528703, 2316500, 3817976, -3677745, -3342478, 2244091, -3041255, -2446433, -3562462, -1452451, 266997, 2434439, 3475950, -1235728, 3513181, 2176455, -3520352, -3759364, -1585221, -1197226, -3193378, -1257611, 900702, 1859098, 1939314, 909542, 819034, -4083598, 495491, -1613174, -1000202, -43260, -522500, -3190144, -655327, -3122442, -3157330, 2031748, 3207046, -3632928, -3556995, -525098, 126922, -768622, -3595838, 3412210, 342297, 286988, -983419, -2437823, 4108315, 2147896, 3437287, -3342277, 2715295, 1735879, 203044, -2967645, 2842341, 2691481, -3693493, -2590150, 1265009, -411027, 4055324, 1247620, -2477047, 2486353, 1595974, -671102, -3767016, 1250494, -1228525, 2635921, -3548272, -22981, -2994039, 1869119, -1308169, 1903435, -1050970, -381987, -1333058, 1237275, 1349076, -3318210, -1430225, 1852771, -451100, 1312455, -1430430, 3306115, -1962642, -3343383, -1279661, 1917081, 264944, -2546312, -1374803, 508951, 1500165, 777191, 3097992, 2235880, 3406031, 44288, -542412, -2831860, -1100098, -1671176, -1846953, 904516, -2584293, -3724270, 3958618, 594136, -3776993, -3724342, -2013608, 2432395, -8578, 2454455, -164721, 1653064, 1957272, 3369112, -3249728, 185531, -1207385, 2389356, -3183426, 162844, -210977, 1616392, 3014001, 759969, 810149, 1652634, -1316856, -3694233, -1799107, 189548, -3038916, 3523897, -3553272, 3866901, 269760, 3159746, 2213111, -975884, -1851402, 1717735, 472078, -2409325, -426683, 1723600, -177440, -1803090, 1910376, 1315589, -1667432, -1104333, 1341330, -260646, -3833893, 1285669, -2939036, -2235985, -1584928, -420899, -2286327, -812732, 183443, -976891, -1439742, 1612842, -3545687, -3019102, -554416, 3919660, -3881060, -48306, -1362209, -3628969, 3937738, 1400424, 3839961, -846154, 1976782
.size zetas_new332,.-zetas_new332
